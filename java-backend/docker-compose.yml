
version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:16
    container_name: printify-check-postgres
    environment:
      POSTGRES_DB: printifycheck
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      # Optimize PostgreSQL for ARM architecture
      POSTGRES_INITDB_ARGS: "--data-checksums"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    # Optimize for Oracle Cloud ARM instance
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    # Optimize PostgreSQL for better performance on ARM
    command: >
      postgres -c shared_buffers=256MB
              -c effective_cache_size=768MB
              -c work_mem=16MB
              -c maintenance_work_mem=64MB
              -c max_connections=100
              -c autovacuum=on
              -c track_counts=on
              -c max_wal_size=1GB
              -c min_wal_size=80MB
              -c checkpoint_completion_target=0.9
              -c random_page_cost=1.1
              -c effective_io_concurrency=200
              -c wal_buffers=16MB
              -c synchronous_commit=off
              -c jit=off # Disable JIT for ARM instances
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for job queue and caching
  redis:
    image: redis:7-alpine
    container_name: printify-check-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf --save 60 1 --loglevel warning
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Java Spring Boot backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: printify-check-backend
    ports:
      - "${API_PORT:-8080}:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-production}
      - SERVER_PORT=8080
      - JAVA_OPTS=-XX:+UseZGC -XX:+ZGenerational -Xmx2g
      - PDF_UPLOAD_DIR=/app/uploads
      - PDF_PROCESSED_DIR=/app/processed
      - TESSDATA_PATH=/usr/share/tesseract-ocr/4.00/tessdata
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB:-printifycheck}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - HIKARI_MAX_POOL_SIZE=${DB_MAX_POOL_SIZE:-10}
      - HIKARI_MIN_IDLE=${DB_MIN_IDLE:-5}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_CONCURRENT_JOBS=${MAX_CONCURRENT_JOBS:-4}
      - APP_ENV=production
    volumes:
      - pdf-uploads:/app/uploads
      - pdf-processed:/app/processed
      - logs:/app/logs
      - temp:/app/temp
      - cache:/app/cache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    # Optimize for Oracle Cloud ARM instance
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 3G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:1.26-alpine
    container_name: printify-check-nginx
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./config/ssl:/etc/nginx/ssl
      - ./frontend/build:/usr/share/nginx/html
      - nginx-cache:/var/cache/nginx
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  postgres-data:
  redis-data:
  pdf-uploads:
  pdf-processed:
  logs:
  temp:
  cache:
  nginx-cache:
